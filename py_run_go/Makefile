# Makefile for python interface for package lodash.
# File is generated by gopy. Do not edit.
# gopy build -output=py_run_go -vm=python3.11 github.com/tamirfri/py-run-go-run-js

GOCMD=go
GOBUILD=$(GOCMD) build -mod=mod
GOIMPORTS=goimports
PYTHON=/home/linuxbrew/.linuxbrew/bin/python3.11
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = -I/home/linuxbrew/.linuxbrew/opt/python@3.11/include/python3.11
LDFLAGS = -L/home/linuxbrew/.linuxbrew/opt/python@3.11/lib -lpython3.11 -ldl -lm

all: gen build

gen:
	gopy gen -no-make -vm=python3.11 github.com/tamirfri/py-run-go-run-js

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm lodash.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w lodash.go
	# generate lodash_go$(LIBEXT) from lodash.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o lodash_go$(LIBEXT) lodash.go
	# use pybindgen to build the lodash.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# build the _lodash$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated lodash.py python wrapper imports this c-code package
	
	$(GCC) lodash.c  lodash_go$(LIBEXT) -o _lodash$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


